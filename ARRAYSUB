//http://www.spoj.com/problems/ARRAYSUB/
//SEGMENT TREE APPROAACH 

#include<cstdio>
#include<algorithm>

using namespace std;
#define M 1000009
#define MAX 2000009
long long arr[M],tree[MAX];

void build(int s,int e,int index)
{

    if(s>e)
        return ;
    if(s==e)
    {
        tree[index]=arr[s];
        return ;
    }
    int mid=(s+e)/2.0;
    build(s,mid,2*index+1);
    build(mid+1,e,2*index+2);
    tree[index]=max(tree[2*index+1],tree[2*index+2]);

}

long long query(int s,int e,int qs,int qe,int index)
{
    if(s>e||s>qe||e<qs)
        return -1;
    if(s>=qs&&e<=qe)
        return tree[index];
    int mid=(s+e)/2.0;

    return max(query(s,mid,qs,qe,2*index+1),query(mid+1,e,qs,qe,2*index+2));
}
int main()
{
    int n;
    scanf("%d",&n);
    for(int i=0;i<n;i++)
        scanf("%lld",&arr[i]);

    build(0,n-1,0);
    int k;
    scanf("%d",&k);
    int j=0;
    for(int i=k-1;i<n;i++)
    {
        printf("%lld ",query(0,n-1,j,i,0));
        j++;
    }
    return 0;
}
